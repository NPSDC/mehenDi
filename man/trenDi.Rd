% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trenDi.R
\name{trenDi}
\alias{trenDi}
\title{trenDi method: Finding differential nodes in the tree with no two nodes having an ancestor/descendant relationship}
\usage{
trenDi(tse, x, pvalues, minP = 0.7, mIRVThresh = 0.4, alpha = 0.01, cores = 1)
}
\arguments{
\item{tse}{TreeSummarizedExperiment which contains the scaled inferential replicates}

\item{x}{character, the name of the condition variable. A factor for two group analysis}

\item{pvalues}{numeric, pvalues for all the nodes in the tree}

\item{minP}{numeric, value betweem 0 and 1, the proportion of the total inferential replicates
which should have the same sign change between conditions}

\item{mIRVThresh}{numeric, minimum meanInfRV that a node should have for it to be considered for aggregation}

\item{alpha}{numeric, the rate for the BH correction on the leaves which will be the pvalue threshold for deeming a node significant}

\item{cores}{numeric, the number of cores that will be used during parallelization}
}
\value{
list that contains the selected candidate nodes and the pvalue threshold used for deeeming
a node significant
}
\description{
trenDi method: Finding differential nodes in the tree with no two nodes having an ancestor/descendant relationship
}
\examples{

dir <- system.file("extdata", package="brainSimSmall")
clustFile <- file.path(dir, "cluster_nwk.txt")
quantDir <- file.path(dir, "salmon_quants")
samples <- as.vector(outer(c(1:6), c(1,2), function(x,y) paste(x,y,sep='_')))
quantFiles <- file.path(quantDir, samples, 'quant.sf')
coldata <- data.frame(files=quantFiles, names=samples, condition=factor(rep(1:2, each=6)))
tse <- beaveR::buildTSE(treeTermFile = clustFile, coldata = coldata)
tree <- TreeSummarizedExperiment::rowTree(tse)
l <- length(tree$tip)

yAll <- beaveR::computeSizeFactors(tse)
yAll <- beaveR::scInfReps(yAll)
yAll <- fishpond::labelKeep(yAll)
set.seed(1)
yTxps <- fishpond::swish(yAll[1:l,], x="condition") 
yInn <- fishpond::swish(yAll[(l+1):nrow(yAll),], x="condition")
pvals <- c(mcols(yTxps)[["pvalues"]], mcols(yInn)[["pvalues"]])

}
