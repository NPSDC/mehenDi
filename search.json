[{"path":"https://npsdc.github.io/mehenDi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Noor Pratap Singh, Michael Love, Rob Patro Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"also install package brainSimSmall small RNA-Seq dataset, example run.","code":"devtools::install_github(\"NPSDC/mehenDi\") devtools::install_github(\"NPSDC/brainSimSmall\") ## Download the package with a small dataset suppressPackageStartupMessages(library(mehenDi))"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"mehendi","dir":"Articles","previous_headings":"","what":"mehenDi","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"mehenDi method performs differential testing use transcripts-tree obtained TreeTerminus. transcripts arranged way uncertainty decreases ascending tree, inner nodes comprising transcripts groups. mehenDi aims leverage tree structure find differential signal tree might get lost due uncertainty. selected nodes can consist transcripts inner nodes, inner nodes representing set transcripts exhibit high uncertainty.","code":""},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"demonstrate mehenDi small simulated RNA-Seq dataset brainSimSmall package. Salmon quantified counts samples, 100 inferential replicates generated using Gibbs Sampling. Note Gibbs Sampling can replaced bootstrap sampling. dataset consists 12 samples belonging two-groups, 6 samples .","code":""},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"loading-data","dir":"Articles","previous_headings":"Quick start","what":"Loading data","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"first load data using beaveR create TreeSummarizedExperiment object. leaves consist transcripts.","code":"dir <- system.file(\"extdata\", package=\"brainSimSmall\") clustFile <- file.path(dir, \"cluster_nwk.txt\") quantDir <- file.path(dir, \"salmon_quants\") samples <- as.vector(outer(c(1:6), c(1,2), function(x,y) paste(x,y,sep='_'))) quantFiles <- file.path(quantDir, samples, 'quant.sf') coldata <- data.frame(files=quantFiles, names=samples, condition=factor(rep(1:2, each=6))) tse <- beaveR::buildTSE(treeTermFile = clustFile, coldata = coldata) tse #> class: TreeSummarizedExperiment  #> dim: 8942 12  #> metadata(8): tximetaInfo quantInfo ... txpsAnn infRepsScaled #> assays(105): counts abundance ... mean variance #> rownames(8942): ENST00000526904.5 ENST00000485271.5 ... Node8941 #>   Node8942 #> rowData names(1): meanInfRV #> colnames(12): 1_1 2_1 ... 5_2 6_2 #> colData names(2): names condition #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> rowLinks: a LinkDataFrame (8942 rows) #> rowTree: 1 phylo tree(s) (4969 leaves) #> colLinks: NULL #> colTree: NULL tree <- TreeSummarizedExperiment::rowTree(tse) tree #>  #> Phylogenetic tree with 4969 tips and 3973 internal nodes. #>  #> Tip labels: #>   ENST00000526904.5, ENST00000485271.5, ENST00000635731.1, ENST00000636169.1, ENST00000532543.1, ENST00000483653.1, ... #> Node labels: #>   Node4970, Node4971, Node4972, Node4973, Node4974, Node4975, ... #>  #> Unrooted; includes branch lengths. l <- length(tree$tip)"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"differential-transcript-expression","dir":"Articles","previous_headings":"Quick start","what":"Differential transcript expression","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"first perform differential testing transcripts using Swish. can see transcripts called significant 0.01 FDR threshold.","code":"set.seed(1) yTxps <- tse[1:l,] yTxps <- fishpond::scaleInfReps(yTxps, quiet=T) yTxps <- fishpond::labelKeep(yTxps) yTxps <- fishpond::swish(yTxps, x=\"condition\", quiet=T) yTxps <- yTxps[match(rownames(yTxps), tree$tip.label),] table(mcols(yTxps)[[\"qvalue\"]] < 0.1) #>  #> FALSE  TRUE  #>  1418   121"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"differential-gene-expression","dir":"Articles","previous_headings":"Quick start","what":"Differential gene expression","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"","code":"yAllTxps <- tximeta::tximeta(coldata) gy <- tximeta::summarizeToGene(yAllTxps) gy <- fishpond::scaleInfReps(gy, quiet=TRUE) gy <- fishpond::labelKeep(gy) gy <- fishpond::swish(gy, x=\"condition\", quiet=TRUE) dim(gy) #> [1] 57808    12 table(mcols(gy)[[\"qvalue\"]] < 0.1) #>  #> FALSE  TRUE  #>    85    16"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"running-mehendi","dir":"Articles","previous_headings":"Quick start","what":"Running mehenDi","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"next run mehenDi TreeSummarizedExperiment object tse created . pipeline similar Swish, first data normalized (used median-ratio scaling example). used Swish computing p-values, however compute separately leaves inner nodes. due lower uncertainty, width distribution test-statistic inner nodes wider thus smaller p-values compared inner nodes. mehenDi outputs set selected nodes based filtering criteria. node p-value less certain threshold (governed (alpha)) found, check different criteria. First, nodes consist atleast one child node p-value larger threshold, otherwise overaggregating. check underlying descendant nodes confident direction sign-change direction change conditions. confidence determined (minP) parameters looks inferential replicates. Finally, also want child nodes selected node, uncertain abundance estimates (governed (meanInfRV)).","code":"suppressPackageStartupMessages(library(mehenDi)) set.seed(1) yAll <- beaveR::computeSizeFactors(tse, quiet=TRUE) yAll <- beaveR::scInfReps(yAll, quiet=TRUE) yAll <- fishpond::labelKeep(yAll) yInn <- yAll[(l+1):nrow(yAll),] yInn <- fishpond::swish(yInn, x=\"condition\", quiet=TRUE)  pvals <- c(mcols(yTxps)[[\"pvalue\"]], mcols(yInn)[[\"pvalue\"]]) tD <- mehenDi(yAll, x=\"condition\", pvalues = pvals,                     minP=0.7, mIRVThresh=0.4, alpha=0.1) length(tD$selNodes) ## Total number of selected nodes #> [1] 97 sum(tD$selNodes > l) ## Number of inner nodes that are selected #> [1] 19 table(ape::node.depth(tree, 2)[tD[[\"selNodes\"]]]) ## Distribution of the height of the nodes output by mehenDi #>  #>  1  2  3  4  5  6  7  8  9 10 11  #> 78  4  1  4  1  1  3  1  2  1  1"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"visualizing-the-node-output-by-mehendi","dir":"Articles","previous_headings":"Quick start","what":"Visualizing the node output by mehenDi","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"next visualize node output mehenDi. plot transcripts pileup style corresponding gene uniquely mapped transcripts node corresponding transcript-tree. also plot inferential replicates two conditions, transcript significant p-value node output mehenDi. lot different libraries functions utilized create plot, use plotGarderner library organize plots together.","code":""},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"transcript-tree-for-a-mehendi-node","dir":"Articles","previous_headings":"Quick start > Visualizing the node output by mehenDi","what":"Transcript tree for a mehenDi node","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"first create tree selected mehenDi inner node using library ggtree","code":"suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(ggtree)) node <- tD$selNodes[tD$selNodes > l][7] treeSub <- tidytree::tree_subset(tree, node, levels_back = 0) txShow <- rownames(tse)[phangorn::Descendants(tree,node)[[1]]] ## Transcript names for the transcripts in the tree txpMin <- treeSub$tip.label[which.min(mcols(yTxps)[treeSub$tip.label, \"pvalue\"])] minTInd <- match(txpMin, treeSub$tip)  size <- 5 fs <- 20 nI <- 5  pTree <- ggtree(treeSub) +         xlim(NA, 80) +         geom_tiplab(size=6, hjust=-0.1) +         geom_point2(aes(subset=(node==nI), color=\"red\"),                 size=5, fill='red', show.legend=T) +         geom_point2(aes(subset=(node==minTInd), color = \"black\"),                 size=5, fill='black', show.legend=T) +         geom_cladelab(node = nI, label = \"\", textcolour=\"red\", barsize=2,                       barcolour=\"red\",  fontsize=5, offset = 36) +         theme(legend.position = \"bottom\", legend.text=element_text(size=fs),              plot.title=element_text(size=fs, face=\"bold\", hjust=0)) +         scale_color_manual(name = \"\", labels=c(\"Transcript with the lowest p-value\", \"Selected Node\"),                values=c(\"black\", \"red\"))"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"plots-for-inferential-replicates","dir":"Articles","previous_headings":"Quick start > Visualizing the node output by mehenDi","what":"Plots for inferential replicates","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"next store plots inferential replicates using fishpond’s plotInfReps function mehenDi node underlying transcript lowest p-value.","code":"suppressPackageStartupMessages(library(ggplotify)) cex <- 1.6 legPos <- \"topright\" pTxp <- as.grob(function() fishpond::plotInfReps(yAll, txpMin, x = \"condition\", legend=TRUE,                               main=txpMin, legendTitle=TRUE, legendCex=cex,                               legendPos = legPos))  pInn <- as.grob(function() fishpond::plotInfReps(yAll, node, x = \"condition\", legend=TRUE,                               main=paste0(\"Node\",node), legendTitle=TRUE, legendCex=cex,                                  legendPos = legPos))"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"pileup-style-plot-and-putting-all-the-plots-together","dir":"Articles","previous_headings":"Quick start > Visualizing the node output by mehenDi","what":"Pileup style plot and putting all the plots together","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"use plotTranscripts function plotGardener package create pileup style plot. However, go series steps can make use function.","code":""},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"extract-gene-transcripts-and-their-ranges-in-txdb-for-a-given-node","dir":"Articles","previous_headings":"Quick start > Visualizing the node output by mehenDi > Pileup style plot and putting all the plots together","what":"Extract gene, transcripts and their ranges in txdb for a given node","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"use txdb load reference corresponding hg38 accordingly extract information corresponding mehenDi node.","code":"suppressPackageStartupMessages(library(org.Hs.eg.db)) suppressPackageStartupMessages(library(TxDb.Hsapiens.UCSC.hg38.knownGene)) suppressPackageStartupMessages(library(plyranges))  txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene txpHuman <- transcripts(txdb)  txpHuman <- txpHuman %>%   mutate(tx_id = as.character(tx_id))  txpHuman <- txpHuman %>%   mutate(gene_id = mapIds(            txdb, keys=tx_id,            column=\"GENEID\", keytype=\"TXID\")          ) %>%   filter(!is.na(gene_id)) txpHuman <- txpHuman %>%   mutate(ensID = mapIds(            org.Hs.eg.db, keys=gene_id,            column=\"ENSEMBL\", keytype=\"ENTREZID\")          ) %>%   filter(!is.na(ensID)) txpHuman <- txpHuman %>%                 filter(tx_name %in% intersect(tree$tip, mcols(txpHuman)[[\"tx_name\"]]))   genesHuman <- genes(txdb) genesHuman <- genesHuman %>%   mutate(ensID = mapIds(org.Hs.eg.db,                             gene_id, \"ENSEMBL\", \"ENTREZID\")) %>%     filter(!is.na(ensID))  gene <- txpHuman %>%         filter(tx_name %in% treeSub$tip) %>%         tibble::as_tibble() %>%         dplyr::select(ensID) %>%         unlist %>%         unique  ## We have selected the transcripts only in the positive strand for this gene, since the transcripts corresponding to mehenDi node belong to this strand and plotting transcripts for both strands, would make the figure very big gDB <- genesHuman %>%          filter(ensID == gene, strand == \"+\") %>%         tibble::as_tibble()"},{"path":"https://npsdc.github.io/mehenDi/articles/mehenDi.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"Quick start > Visualizing the node output by mehenDi > Pileup style plot and putting all the plots together","what":"Putting it all together","title":"Tree-based differential testing using inferential uncertainty for RNA-Seq","text":"","code":"suppressPackageStartupMessages(library(plotgardener)) suppressPackageStartupMessages(library(grid))  pageCreate(width = 17, height = 17, showGuides = FALSE, default.units = \"inches\")  par <- pgParams(           chrom = as.character(gDB[[\"seqnames\"]]),            chromstart = gDB[[\"start\"]], chromend = gDB[[\"end\"]],           assembly = \"hg38\", just = c(\"left\", \"bottom\"),          default.units = \"inches\", fontsize = fs-7         )      hilite <- data.frame(transcript=txShow,                       color=rep(\"red\", length(txShow))                              ) parText <- pgParams(     just = c(\"left\"), fontsize = fs )#, fontface = \"bold\")  plotText(label=\"A) Transcripts mapping to gene PDE4DIP\", x = 0.5, y = 0.5,         params = parText)  plotTranscripts(     params = par, x = 1.5, y = 9.8, width = 5, height = 9,      spaceHeight=1, boxHeight=0.1, #     labels = \"transcript\", fill=\"blue\",     transcriptHighlights = hilite )  plotGenomeLabel(   params = par, x = 0.5, y = 10.1, length=6,   just = c(\"left\", \"top\"), fontsize=fs )   plotText(label=\"B) Tree representing the transcripts covered by gene\\n PDE4DIP\",           x = 8, y = 0.5, params = parText) plotGG(     plot = pTree,     x = 7.7, y = 2, width = 8, height=6 )  plotText(label=\"C) Scaled inferential replicates for the \\ntranscript ENST00000369356.8\",           x = 0.5, y = 11, params = parText)  plotGG(     plot = pTxp,     x = 0.5, y = 11.5, width = 6, height=6 )  plotText(label=\"D) Scaled inferential replicates for the selected node\",           x = 7.8, y = 11, params = parText)  plotGG(     plot = pInn,     x = 8.3, y = 11.5, width = 6, height=6 ) sessionInfo() #> R version 4.3.2 (2023-10-31) #> Platform: x86_64-conda-linux-gnu (64-bit) #> Running under: Red Hat Enterprise Linux 8.10 (Ootpa) #>  #> Matrix products: default #> BLAS/LAPACK: /fs/cbcb-lab/rob/students/noor/miniforge3/envs/R4.3/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: America/New_York #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] grid      stats4    stats     graphics  grDevices utils     datasets  #> [8] methods   base      #>  #> other attached packages: #>  [1] plotgardener_1.8.3                       #>  [2] plyranges_1.22.0                         #>  [3] TxDb.Hsapiens.UCSC.hg38.knownGene_3.18.0 #>  [4] org.Hs.eg.db_3.18.0                      #>  [5] ggplotify_0.1.2                          #>  [6] ggtree_3.10.1                            #>  [7] ggplot2_3.5.1                            #>  [8] mehenDi_0.99.0                           #>  [9] GenomicFeatures_1.54.4                   #> [10] AnnotationDbi_1.64.1                     #> [11] Biobase_2.62.0                           #> [12] GenomicRanges_1.54.1                     #> [13] GenomeInfoDb_1.38.8                      #> [14] IRanges_2.36.0                           #> [15] S4Vectors_0.40.2                         #> [16] BiocGenerics_0.48.1                      #>  #> loaded via a namespace (and not attached): #>   [1] strawr_0.0.92                   RColorBrewer_1.1-3              #>   [3] jsonlite_1.8.8                  tximport_1.30.0                 #>   [5] magrittr_2.0.3                  farver_2.1.2                    #>   [7] rmarkdown_2.27                  fs_1.6.4                        #>   [9] BiocIO_1.12.0                   zlibbioc_1.48.2                 #>  [11] ragg_1.3.2                      vctrs_0.6.5                     #>  [13] memoise_2.0.1                   Rsamtools_2.18.0                #>  [15] RCurl_1.98-1.16                 htmltools_0.5.8.1               #>  [17] S4Arrays_1.2.1                  progress_1.2.3                  #>  [19] AnnotationHub_3.10.1            curl_5.2.1                      #>  [21] gridGraphics_0.5-1              SparseArray_1.2.4               #>  [23] sass_0.4.9                      bslib_0.7.0                     #>  [25] htmlwidgets_1.6.4               desc_1.4.3                      #>  [27] plyr_1.8.9                      cachem_1.1.0                    #>  [29] GenomicAlignments_1.38.2        igraph_2.0.3                    #>  [31] mime_0.12                       lifecycle_1.0.4                 #>  [33] pkgconfig_2.0.3                 Matrix_1.6-5                    #>  [35] R6_2.5.1                        fastmap_1.2.0                   #>  [37] GenomeInfoDbData_1.2.11         MatrixGenerics_1.14.0           #>  [39] shiny_1.8.1.1                   aplot_0.2.3                     #>  [41] digest_0.6.36                   colorspace_2.1-1                #>  [43] patchwork_1.2.0                 tximeta_1.20.3                  #>  [45] textshaping_0.4.0               RSQLite_2.3.7                   #>  [47] labeling_0.4.3                  filelock_1.0.3                  #>  [49] fansi_1.0.6                     httr_1.4.7                      #>  [51] TreeSummarizedExperiment_2.10.0 abind_1.4-5                     #>  [53] compiler_4.3.2                  withr_3.0.0                     #>  [55] bit64_4.0.5                     BiocParallel_1.36.0             #>  [57] DBI_1.2.3                       highr_0.11                      #>  [59] biomaRt_2.58.2                  rappdirs_0.3.3                  #>  [61] DelayedArray_0.28.0             rjson_0.2.23                    #>  [63] gtools_3.9.5                    tools_4.3.2                     #>  [65] ape_5.8                         interactiveDisplayBase_1.40.0   #>  [67] httpuv_1.6.15                   glue_1.7.0                      #>  [69] quadprog_1.5-8                  restfulr_0.0.15                 #>  [71] nlme_3.1-165                    promises_1.3.0                  #>  [73] reshape2_1.4.4                  generics_0.1.3                  #>  [75] gtable_0.3.5                    tzdb_0.4.0                      #>  [77] tidyr_1.3.1                     ensembldb_2.26.0                #>  [79] data.table_1.15.4               hms_1.1.3                       #>  [81] xml2_1.3.6                      utf8_1.2.4                      #>  [83] XVector_0.42.0                  fishpond_2.8.0                  #>  [85] BiocVersion_3.18.1              pillar_1.9.0                    #>  [87] stringr_1.5.1                   vroom_1.6.5                     #>  [89] yulab.utils_0.1.5               later_1.3.2                     #>  [91] splines_4.3.2                   dplyr_1.1.4                     #>  [93] BiocFileCache_2.10.2            treeio_1.26.0                   #>  [95] lattice_0.22-6                  rtracklayer_1.62.0              #>  [97] bit_4.0.5                       tidyselect_1.2.1                #>  [99] SingleCellExperiment_1.24.0     Biostrings_2.70.3               #> [101] beaveR_0.99.1                   knitr_1.48                      #> [103] ProtGenerics_1.34.0             SummarizedExperiment_1.32.0     #> [105] xfun_0.46                       matrixStats_1.3.0               #> [107] stringi_1.8.4                   ggfun_0.1.5                     #> [109] lazyeval_0.2.2                  yaml_2.3.10                     #> [111] evaluate_0.24.0                 codetools_0.2-20                #> [113] qvalue_2.34.0                   tibble_3.2.1                    #> [115] BiocManager_1.30.23             cli_3.6.3                       #> [117] xtable_1.8-4                    systemfonts_1.1.0               #> [119] munsell_0.5.1                   jquerylib_0.1.4                 #> [121] Rcpp_1.0.13                     svMisc_1.2.3                    #> [123] dbplyr_2.5.0                    png_0.1-8                       #> [125] XML_3.99-0.17                   parallel_4.3.2                  #> [127] pkgdown_2.1.1                   readr_2.1.5                     #> [129] blob_1.2.4                      prettyunits_1.2.0               #> [131] AnnotationFilter_1.26.0         bitops_1.0-7                    #> [133] phangorn_2.11.1                 tidytree_0.4.6                  #> [135] scales_1.3.0                    purrr_1.0.2                     #> [137] crayon_1.5.3                    rlang_1.1.4                     #> [139] fastmatch_1.1-4                 KEGGREST_1.42.0"},{"path":"https://npsdc.github.io/mehenDi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Noor Pratap Singh. Author, maintainer. Michael Love. Author, contributor. Rob Pato. Author, contributor.","code":""},{"path":"https://npsdc.github.io/mehenDi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Singh N, Love M, Pato R (2025). mehenDi: Differential testing forest trees output form TreeTerminus. R package version 0.99.1, https://github.com/NPSDC/mehenDi.","code":"@Manual{,   title = {mehenDi: Differential testing on the forest of trees output form TreeTerminus},   author = {Noor Pratap Singh and Michael Love and Rob Pato},   year = {2025},   note = {R package version 0.99.1},   url = {https://github.com/NPSDC/mehenDi}, }"},{"path":[]},{"path":"https://npsdc.github.io/mehenDi/index.html","id":"mehendi-tree-based-differential-testing-using-inferential-uncertainty-for-rna-seq","dir":"","previous_headings":"","what":"mehenDi: Tree-based differential testing using inferential uncertainty for RNA-Seq","title":"Differential testing on the forest of trees output form TreeTerminus","text":"mehenDi method performs differential testing use transcripts-tree obtained TreeTerminus. transcripts arranged way uncertainty decreases ascending tree, inner nodes comprising transcripts groups. mehenDi aims leverage tree structure find differential signal tree might get lost due uncertainty. selected nodes can consist transcripts inner nodes, inner nodes representing set transcripts exhibit high uncertainty.","code":""},{"path":"https://npsdc.github.io/mehenDi/index.html","id":"installation","dir":"","previous_headings":"mehenDi: Tree-based differential testing using inferential uncertainty for RNA-Seq","what":"Installation","title":"Differential testing on the forest of trees output form TreeTerminus","text":"","code":"devtools::install_github(\"NPSDC/mehenDi\") devtools::install_github(\"NPSDC/brainSimSmall\") ## Download the package with a small dataset"},{"path":[]},{"path":"https://npsdc.github.io/mehenDi/index.html","id":"loading-data","dir":"","previous_headings":"mehenDi: Tree-based differential testing using inferential uncertainty for RNA-Seq > Quick start","what":"Loading Data","title":"Differential testing on the forest of trees output form TreeTerminus","text":"","code":"dir <- system.file(\"extdata\", package=\"brainSimSmall\") clustFile <- file.path(dir, \"cluster_nwk.txt\") quantDir <- file.path(dir, \"salmon_quants\") samples <- as.vector(outer(c(1:6), c(1,2), function(x,y) paste(x,y,sep='_'))) quantFiles <- file.path(quantDir, samples, 'quant.sf') coldata <- data.frame(files=quantFiles, names=samples, condition=factor(rep(1:2, each=6)))  tse <- beaveR::buildTSE(treeTermFile = clustFile, coldata = coldata) ## the path to a directory that contains Salmon quantified RNA-Seq samples and the corresponding forest file produced by TreeTerminus tse tree <- TreeSummarizedExperiment::rowTree(tse) tree l <- length(tree$tip)"},{"path":"https://npsdc.github.io/mehenDi/index.html","id":"running-mehendi","dir":"","previous_headings":"mehenDi: Tree-based differential testing using inferential uncertainty for RNA-Seq > Quick start","what":"Running mehenDi","title":"Differential testing on the forest of trees output form TreeTerminus","text":"input mehenDi TreeSummarizedExperiment (tse) object. object can created using package beaveR, requires input tximeta forest file produced TreeTerminus. Among inputs p-values corresponding node tree belonging tse object, example generated using swish package fishpond.","code":"suppressPackageStartupMessages(library(mehenDi)) set.seed(1) yTxps <- tse[1:l,] yTxps <- fishpond::swish(yTxps, x=\"condition\")  yAll <- beaveR::computeSizeFactors(tse) yAll <- beaveR::scInfReps(yAll) yAll <- fishpond::labelKeep(yAll) metadata(yAll)$infRepsScaled <- TRUE yInn <- yAll[(l+1):nrow(yAll),] set.seed(1) yInn <- fishpond::swish(yInn, x=\"condition\")  pvals <- c(mcols(yTxps)[[\"pvalue\"]], mcols(yInn)[[\"pvalue\"]]) tD <- mehenDi::mehenDi(yAll, x=\"condition\", pvalues = pvals,                     minP=0.7, mIRVThresh=0.4, alpha=0.01) length(tD$selNodes) ## Total number of selected nodes sum(tD$selNodes > l) ## Number of inner nodes that are selected"},{"path":"https://npsdc.github.io/mehenDi/index.html","id":"exploration-of-the-nodes-output-by-mehendi","dir":"","previous_headings":"mehenDi: Tree-based differential testing using inferential uncertainty for RNA-Seq > Quick start","what":"Exploration of the nodes output by mehenDi","title":"Differential testing on the forest of trees output form TreeTerminus","text":"","code":"fishpond::plotInfReps(yAll, tD[[\"selNodes]][1], x=\"condition\") nodeInf <- beaveR::findNodeInformation(yAll, node = tD[[\"selNodes]][1], type = \"tips\") nodeInf"},{"path":"https://npsdc.github.io/mehenDi/reference/computeSign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns a sign change between directions to a transcript/node — computeSign","title":"Assigns a sign change between directions to a transcript/node — computeSign","text":"Assigns sign change directions transcript/node","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/computeSign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns a sign change between directions to a transcript/node — computeSign","text":"","code":"computeSign(y, x, minP = 0.7, pc = 5)"},{"path":"https://npsdc.github.io/mehenDi/reference/computeSign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns a sign change between directions to a transcript/node — computeSign","text":"y SummarizedExperiment containing scaled inferential replicates x character column colData contains condition information minP float value b/w 0 1, denoting much proportion inferential replicates hold sign change pc numeric, pseudocount, default 5","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/computeSign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns a sign change between directions to a transcript/node — computeSign","text":"numeric vector, length equal number rows y, 1 indicating positive sign change, -1 negative sign change 0 unsure","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mehenDi: Differential testing on the forest of trees output form TreeTerminus — mehenDi-package","title":"mehenDi: Differential testing on the forest of trees output form TreeTerminus — mehenDi-package","text":"package provides tree based differential testing RNA-Seq data, tree obtained TreeTerminus. candidate nodes can consist leaves inner nodes, inner nodes comprising susbet transcripts exhibit high uncertainty.","code":""},{"path":[]},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mehenDi: Differential testing on the forest of trees output form TreeTerminus — mehenDi-package","text":"Maintainer: Noor Pratap Singh noorpratap@gmail.com Authors: Michael Love michaelisaiahlove@gmail.com [contributor] Rob Pato rob@cs.umd.edu [contributor]","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":null,"dir":"Reference","previous_headings":"","what":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"package provides tree based differential testing method RNA-Seq data, tree obtained TreeTerminus. candidate nodes can consist leaves inner nodes, inner nodes comprising subset transcripts exhibit high uncertainty.","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"","code":"mehenDi(   tse,   x,   pvalues,   minP = 0.7,   mIRVThresh = 0.4,   alpha = 0.01,   pThresh = NULL,   cores = 1 )"},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"tse TreeSummarizedExperiment contains scaled inferential replicates x character, name condition variable. factor two group analysis pvalues numeric, pvalues nodes tree minP numeric, value betweem 0 1, proportion total inferential replicates sign change conditions (default 0.7) mIRVThresh numeric, minimum meanInfRV node considered aggregation (default 0.4) alpha numeric, rate BH correction leaves pvalue threshold deeming node significant, wont used pThresh set value pThresh numeric, pvalue threshold climbing, default NULL since pThresh computed automatically based alpha, set NULL pvalue threshold used deeming node significant cores numeric, number cores used parallelization","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"list contains selected nodes pvalue threshold used deeeming node significant","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"main function : mehenDi - performs tree-based differential testing","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/mehenDi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mehenDi: Tree-based differrential testing for RNA-Seq — mehenDi","text":"","code":"dir <- system.file(\"extdata\", package=\"brainSimSmall\") clustFile <- file.path(dir, \"cluster_nwk.txt\") quantDir <- file.path(dir, \"salmon_quants\") samples <- as.vector(outer(c(1:6), c(1,2), function(x,y) paste(x,y,sep='_'))) quantFiles <- file.path(quantDir, samples, 'quant.sf') coldata <- data.frame(files=quantFiles, names=samples, condition=factor(rep(1:2, each=6))) tse <- beaveR::buildTSE(treeTermFile = clustFile, coldata = coldata) #> reading tree #> importing quantifications #> reading in files with read_tsv #> 1  #> 2  #> 3  #> 4  #> 5  #> 6  #> 7  #> 8  #> 9  #> 10  #> 11  #> 12  #>  #> found matching transcriptome: #> [ GENCODE - Homo sapiens - release 26 ] #> loading existing TxDb created: 2023-03-02 17:08:07 #> loading existing transcript ranges created: 2023-03-02 21:45:10 #> Missing txps 12 #> Aggregation Started #> Aggregation Ended tree <- TreeSummarizedExperiment::rowTree(tse) l <- length(tree$tip)  yAll <- beaveR::computeSizeFactors(tse) #> Progress:   1 on 100  Progress:   2 on 100  Progress:   3 on 100  Progress:   4 on 100  Progress:   5 on 100  Progress:   6 on 100  Progress:   7 on 100  Progress:   8 on 100  Progress:   9 on 100  Progress:  10 on 100  Progress:  11 on 100  Progress:  12 on 100  Progress:  13 on 100  Progress:  14 on 100  Progress:  15 on 100  Progress:  16 on 100  Progress:  17 on 100  Progress:  18 on 100  Progress:  19 on 100  Progress:  20 on 100  Progress:  21 on 100  Progress:  22 on 100  Progress:  23 on 100  Progress:  24 on 100  Progress:  25 on 100  Progress:  26 on 100  Progress:  27 on 100  Progress:  28 on 100  Progress:  29 on 100  Progress:  30 on 100  Progress:  31 on 100  Progress:  32 on 100  Progress:  33 on 100  Progress:  34 on 100  Progress:  35 on 100  Progress:  36 on 100  Progress:  37 on 100  Progress:  38 on 100  Progress:  39 on 100  Progress:  40 on 100  Progress:  41 on 100  Progress:  42 on 100  Progress:  43 on 100  Progress:  44 on 100  Progress:  45 on 100  Progress:  46 on 100  Progress:  47 on 100  Progress:  48 on 100  Progress:  49 on 100  Progress:  50 on 100  Progress:  51 on 100  Progress:  52 on 100  Progress:  53 on 100  Progress:  54 on 100  Progress:  55 on 100  Progress:  56 on 100  Progress:  57 on 100  Progress:  58 on 100  Progress:  59 on 100  Progress:  60 on 100  Progress:  61 on 100  Progress:  62 on 100  Progress:  63 on 100  Progress:  64 on 100  Progress:  65 on 100  Progress:  66 on 100  Progress:  67 on 100  Progress:  68 on 100  Progress:  69 on 100  Progress:  70 on 100  Progress:  71 on 100  Progress:  72 on 100  Progress:  73 on 100  Progress:  74 on 100  Progress:  75 on 100  Progress:  76 on 100  Progress:  77 on 100  Progress:  78 on 100  Progress:  79 on 100  Progress:  80 on 100  Progress:  81 on 100  Progress:  82 on 100  Progress:  83 on 100  Progress:  84 on 100  Progress:  85 on 100  Progress:  86 on 100  Progress:  87 on 100  Progress:  88 on 100  Progress:  89 on 100  Progress:  90 on 100  Progress:  91 on 100  Progress:  92 on 100  Progress:  93 on 100  Progress:  94 on 100  Progress:  95 on 100  Progress:  96 on 100  Progress:  97 on 100  Progress:  98 on 100  Progress:  99 on 100  Progress: 100 on 100   yAll <- beaveR::scInfReps(yAll) #> Setting inf rep depth to mean depth #> Progress:   1 on 100  Progress:   2 on 100  Progress:   3 on 100  Progress:   4 on 100  Progress:   5 on 100  Progress:   6 on 100  Progress:   7 on 100  Progress:   8 on 100  Progress:   9 on 100  Progress:  10 on 100  Progress:  11 on 100  Progress:  12 on 100  Progress:  13 on 100  Progress:  14 on 100  Progress:  15 on 100  Progress:  16 on 100  Progress:  17 on 100  Progress:  18 on 100  Progress:  19 on 100  Progress:  20 on 100  Progress:  21 on 100  Progress:  22 on 100  Progress:  23 on 100  Progress:  24 on 100  Progress:  25 on 100  Progress:  26 on 100  Progress:  27 on 100  Progress:  28 on 100  Progress:  29 on 100  Progress:  30 on 100  Progress:  31 on 100  Progress:  32 on 100  Progress:  33 on 100  Progress:  34 on 100  Progress:  35 on 100  Progress:  36 on 100  Progress:  37 on 100  Progress:  38 on 100  Progress:  39 on 100  Progress:  40 on 100  Progress:  41 on 100  Progress:  42 on 100  Progress:  43 on 100  Progress:  44 on 100  Progress:  45 on 100  Progress:  46 on 100  Progress:  47 on 100  Progress:  48 on 100  Progress:  49 on 100  Progress:  50 on 100  Progress:  51 on 100  Progress:  52 on 100  Progress:  53 on 100  Progress:  54 on 100  Progress:  55 on 100  Progress:  56 on 100  Progress:  57 on 100  Progress:  58 on 100  Progress:  59 on 100  Progress:  60 on 100  Progress:  61 on 100  Progress:  62 on 100  Progress:  63 on 100  Progress:  64 on 100  Progress:  65 on 100  Progress:  66 on 100  Progress:  67 on 100  Progress:  68 on 100  Progress:  69 on 100  Progress:  70 on 100  Progress:  71 on 100  Progress:  72 on 100  Progress:  73 on 100  Progress:  74 on 100  Progress:  75 on 100  Progress:  76 on 100  Progress:  77 on 100  Progress:  78 on 100  Progress:  79 on 100  Progress:  80 on 100  Progress:  81 on 100  Progress:  82 on 100  Progress:  83 on 100  Progress:  84 on 100  Progress:  85 on 100  Progress:  86 on 100  Progress:  87 on 100  Progress:  88 on 100  Progress:  89 on 100  Progress:  90 on 100  Progress:  91 on 100  Progress:  92 on 100  Progress:  93 on 100  Progress:  94 on 100  Progress:  95 on 100  Progress:  96 on 100  Progress:  97 on 100  Progress:  98 on 100  Progress:  99 on 100  Progress: 100 on 100   #>  yAll <- fishpond::labelKeep(yAll) set.seed(1) yTxps <- fishpond::swish(yAll[1:l,], x=\"condition\") #> generating test statistics over permutations #> Progress:   1 on 100  Progress:   2 on 100  Progress:   3 on 100  Progress:   4 on 100  Progress:   5 on 100  Progress:   6 on 100  Progress:   7 on 100  Progress:   8 on 100  Progress:   9 on 100  Progress:  10 on 100  Progress:  11 on 100  Progress:  12 on 100  Progress:  13 on 100  Progress:  14 on 100  Progress:  15 on 100  Progress:  16 on 100  Progress:  17 on 100  Progress:  18 on 100  Progress:  19 on 100  Progress:  20 on 100  Progress:  21 on 100  Progress:  22 on 100  Progress:  23 on 100  Progress:  24 on 100  Progress:  25 on 100  Progress:  26 on 100  Progress:  27 on 100  Progress:  28 on 100  Progress:  29 on 100  Progress:  30 on 100  Progress:  31 on 100  Progress:  32 on 100  Progress:  33 on 100  Progress:  34 on 100  Progress:  35 on 100  Progress:  36 on 100  Progress:  37 on 100  Progress:  38 on 100  Progress:  39 on 100  Progress:  40 on 100  Progress:  41 on 100  Progress:  42 on 100  Progress:  43 on 100  Progress:  44 on 100  Progress:  45 on 100  Progress:  46 on 100  Progress:  47 on 100  Progress:  48 on 100  Progress:  49 on 100  Progress:  50 on 100  Progress:  51 on 100  Progress:  52 on 100  Progress:  53 on 100  Progress:  54 on 100  Progress:  55 on 100  Progress:  56 on 100  Progress:  57 on 100  Progress:  58 on 100  Progress:  59 on 100  Progress:  60 on 100  Progress:  61 on 100  Progress:  62 on 100  Progress:  63 on 100  Progress:  64 on 100  Progress:  65 on 100  Progress:  66 on 100  Progress:  67 on 100  Progress:  68 on 100  Progress:  69 on 100  Progress:  70 on 100  Progress:  71 on 100  Progress:  72 on 100  Progress:  73 on 100  Progress:  74 on 100  Progress:  75 on 100  Progress:  76 on 100  Progress:  77 on 100  Progress:  78 on 100  Progress:  79 on 100  Progress:  80 on 100  Progress:  81 on 100  Progress:  82 on 100  Progress:  83 on 100  Progress:  84 on 100  Progress:  85 on 100  Progress:  86 on 100  Progress:  87 on 100  Progress:  88 on 100  Progress:  89 on 100  Progress:  90 on 100  Progress:  91 on 100  Progress:  92 on 100  Progress:  93 on 100  Progress:  94 on 100  Progress:  95 on 100  Progress:  96 on 100  Progress:  97 on 100  Progress:  98 on 100  Progress:  99 on 100  Progress: 100 on 100   #>  yInn <- fishpond::swish(yAll[(l+1):nrow(yAll),], x=\"condition\") #> generating test statistics over permutations #> Progress:   1 on 100  Progress:   2 on 100  Progress:   3 on 100  Progress:   4 on 100  Progress:   5 on 100  Progress:   6 on 100  Progress:   7 on 100  Progress:   8 on 100  Progress:   9 on 100  Progress:  10 on 100  Progress:  11 on 100  Progress:  12 on 100  Progress:  13 on 100  Progress:  14 on 100  Progress:  15 on 100  Progress:  16 on 100  Progress:  17 on 100  Progress:  18 on 100  Progress:  19 on 100  Progress:  20 on 100  Progress:  21 on 100  Progress:  22 on 100  Progress:  23 on 100  Progress:  24 on 100  Progress:  25 on 100  Progress:  26 on 100  Progress:  27 on 100  Progress:  28 on 100  Progress:  29 on 100  Progress:  30 on 100  Progress:  31 on 100  Progress:  32 on 100  Progress:  33 on 100  Progress:  34 on 100  Progress:  35 on 100  Progress:  36 on 100  Progress:  37 on 100  Progress:  38 on 100  Progress:  39 on 100  Progress:  40 on 100  Progress:  41 on 100  Progress:  42 on 100  Progress:  43 on 100  Progress:  44 on 100  Progress:  45 on 100  Progress:  46 on 100  Progress:  47 on 100  Progress:  48 on 100  Progress:  49 on 100  Progress:  50 on 100  Progress:  51 on 100  Progress:  52 on 100  Progress:  53 on 100  Progress:  54 on 100  Progress:  55 on 100  Progress:  56 on 100  Progress:  57 on 100  Progress:  58 on 100  Progress:  59 on 100  Progress:  60 on 100  Progress:  61 on 100  Progress:  62 on 100  Progress:  63 on 100  Progress:  64 on 100  Progress:  65 on 100  Progress:  66 on 100  Progress:  67 on 100  Progress:  68 on 100  Progress:  69 on 100  Progress:  70 on 100  Progress:  71 on 100  Progress:  72 on 100  Progress:  73 on 100  Progress:  74 on 100  Progress:  75 on 100  Progress:  76 on 100  Progress:  77 on 100  Progress:  78 on 100  Progress:  79 on 100  Progress:  80 on 100  Progress:  81 on 100  Progress:  82 on 100  Progress:  83 on 100  Progress:  84 on 100  Progress:  85 on 100  Progress:  86 on 100  Progress:  87 on 100  Progress:  88 on 100  Progress:  89 on 100  Progress:  90 on 100  Progress:  91 on 100  Progress:  92 on 100  Progress:  93 on 100  Progress:  94 on 100  Progress:  95 on 100  Progress:  96 on 100  Progress:  97 on 100  Progress:  98 on 100  Progress:  99 on 100  Progress: 100 on 100   #>  pvals <- c(mcols(yTxps)[[\"pvalue\"]], mcols(yInn)[[\"pvalue\"]]) tD <- mehenDi(yAll, x=\"condition\", pvalues = pvals,                    minP=0.7, mIRVThresh=0.4, alpha=0.01)"},{"path":"https://npsdc.github.io/mehenDi/reference/trenDi.html","id":null,"dir":"Reference","previous_headings":"","what":"Function is deprecated in favor of mehenDi — trenDi","title":"Function is deprecated in favor of mehenDi — trenDi","text":"Function deprecated favor mehenDi","code":""},{"path":"https://npsdc.github.io/mehenDi/reference/trenDi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function is deprecated in favor of mehenDi — trenDi","text":"","code":"trenDi(   tse,   x,   pvalues,   minP = 0.7,   mIRVThresh = 0.4,   alpha = 0.01,   pThresh = NULL,   cores = 1 )"},{"path":"https://npsdc.github.io/mehenDi/reference/trenDi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function is deprecated in favor of mehenDi — trenDi","text":"tse TreeSummarizedExperiment contains scaled inferential replicates x character, name condition variable. factor two group analysis pvalues numeric, pvalues nodes tree minP numeric, value betweem 0 1, proportion total inferential replicates sign change conditions (default 0.7) mIRVThresh numeric, minimum meanInfRV node considered aggregation (default 0.4) alpha numeric, rate BH correction leaves pvalue threshold deeming node significant, wont used pThresh set value pThresh numeric, pvalue threshold climbing, default NULL since pThresh computed automatically based alpha, set NULL pvalue threshold used deeming node significant cores numeric, number cores used parallelization","code":""}]
